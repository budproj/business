# NODE
# --------------------------------------------------------------------------------------------------
# NODE_ENV - Defines the Node environment (used by Node libraries)

# SERVER
# --------------------------------------------------------------------------------------------------
# SERVER_PORT - Defines the port where the server will listen to
# SERVER_HOST - Defines the host where the server will listen to
# SERVER_PREFIX - Defines a global prefix to this API, applied in every route
# SERVER_NETWORK_ADDRESS - The network address that our server will use. This is used to fix a Docker well-known bug where we must define the network address as 0.0.0.0 for it to work inside a container
# SERVER_CORS_CREDENTIALS_ENABLED - If set to "true", it enables the credentials in our server CORS
# SERVER_CORS_ALLOWED_ORIGINS - You can use this environment variable in production to restrict which origins can fetch data from our servers
# SERVER_LOGGING_LEVEL - The log level that your application will listen to. It must be one of the following: DEBUG, INFO, WARN, ERROR
# SERVER_LOGGING_SERVICE_NAME - The service name used in our logging metadata. You must follow the pattern "bussines@<APP_ENV>"

# TYPEORM
# --------------------------------------------------------------------------------------------------
# TYPEORM_HOST - The endpoint that TypeORM uses to connect with the databsae
# TYPEORM_PORT - The port that TypeORM uses to connect with the database
# TYPEORM_CONNECTION_TYPE - The type of connection our TypeORM will use. Defaults to "postgres"
# TYPEORM_DATABASE - The database name where our data is stored
# TYPEORM_USERNAME - The user TypeORM uses to connect with our database
# TYPEORM_PASSWORD - The password used to connect with our database
# TYPEORM_ENTITIES - A comma-separated list of entities pattern paths that TypeORM will use
# TYPEORM_MIGRATIONS - A comma-separated list of migrations pattern paths that TypeORM will use
# TYPEORM_MIGRATIONS_DIR - Where our migrations are stored
# TYPEORM_LOGGING_ENABLED - If set to "true", it logs every query executed by TypeORM
# TYPEORM_CONVENTION_NAMING_ENABLED - If set to "false", it will disable the default snake_case convention naming

# AUTH0
# --------------------------------------------------------------------------------------------------
# AUTHZ_ISSUER - The host name of the credential issuer of Auth0 in our tenant (it is usually the namespace without the protocol prefix)
# AUTHZ_AUDIENCE - The audience of our Auth0 API in our tenant

# GRAPHQL
# --------------------------------------------------------------------------------------------------
GRAPHQL_SCHEMA_FILE_PATH='./dist/src/interface/graphql/schema.gql'
# GRAPHQL_DEBUG_ENABLED - Enables the debug feature in our GraphQL server
# GRAPHQL_PLAYGROUND_ENABLED - Enables the GraphQL playground
# GRAPHQL_INSTROSPECTION_ENABLED - You need to set this to true if you're trying to enabled the playground while using NODE_ENV=production
# GRAPHQL_GODMODE_ENABLED - If set to "true", bypass all authentication rules, allowing you to do anything
# GRAPHQL_GLOBAL_PREFIX_ENABLED - If set to "true", it will use the global prefix from the server

# POSTGRES
# --------------------------------------------------------------------------------------------------
# POSTGRES_USER - Used only in development environments, it sets the Postgres user of our database
# POSTGRES_PASSWORD - Used only in development environments, it sets the Postgres password of our database
# POSTGRES_DB - Used only in development environments, it sets the Postgres name of our database
# POSTGRES_DATA - Used only in development environments, it sets the Postgres host volume path of our database that will persist the container data

# AWS
# --------------------------------------------------------------------------------------------------
# AWS_REGION - The default region for our AWS resources
# AWS_CREDENTIALS_ACCESS_KEY_ID - The AWS access key ID for this application
# AWS_CREDENTIALS_SECRET_ACCESS_KEY - The AWS secret access key for this application
# AWS_S3_BUCKET_NAME - Bucket name to store static assets for this application
# AWS_SES_SOURCE_NAME - The default source named used to send e-mails
# AWS_SES_SOURCE_EMAIL - The default source e-mail used to send e-mails
# AWS_SES_DEBUG_ENABLED - This feature flag enables the SES debugging. When enabled, all e-mails are going to dispatch events to accounts+aws@getbud.co

# AMPLITUDE
# --------------------------------------------------------------------------------------------------
# AMPLITUDE_API_KEY - The API key to track activities on Amplitude

# ANALYTICS
# --------------------------------------------------------------------------------------------------
ANALYTICS_PACKAGES='keyResult'
# ANALYTICS_URL - The URL to our Analytics gRPC server - Default: localhost:9090
