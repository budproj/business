# NODE
# --------------------------------------------------------------------------------------------------
# NODE_ENV - Defines the Node environment (used by Node libraries)

# LOGGING
# --------------------------------------------------------------------------------------------------
# LOGGING_LEVEL - The log level that your application will listen to
# LOGGING_SERVICE_NAME - The service name used in our logging metadata. You must follow the pattern "bussines@<APP_ENV>"

# APPLICATION ENVIRONMENT
# --------------------------------------------------------------------------------------------------
# APP_ENV - Defines the application environment to handle some business logic

# DEBUGGING
# --------------------------------------------------------------------------------------------------
# GOD_MODE_ENABLED - If set to "true", bypass all authentication rules, allowing you to do anything
# GOD_MODE_USER_ID - The ID of the user you want to use as GOD
# GOD_MODE_TEAM_IDS - A comma separated list of teams that your GOD user is part of

# SERVER
# --------------------------------------------------------------------------------------------------
# SERVER_PORT - Defines the port where the server will listen to
# SERVER_HOST - Defines the host where the server will listen to
# SERVER_PREFIX - Defines a global prefix to this API, applied in every route
# SERVER_NETWORK_ADDRESS - The network address that our server will use. This is used to fix a Docker well-known bug where we must define the network address as 0.0.0.0 for it to work inside a container
# SERVER_HTTPS_ENABLED - A feature flag enabling HTTPS in our server
# SERVER_HTTPS_KEY_FILE_PATH - The public key for your HTTPS certificate
# SERVER_HTTPS_CERT_FILE_PATH - The private key for your HTTPS certificate
# SERVER_CORS_CREDENTIALS_FLAG - A feature flag enabling credentials in our server CORS
# SERVER_CORS_ALLOWED_ORIGINS - You can use this environment variable in production to restrict which origins can fetch data from our servers

# TYPEORM
# --------------------------------------------------------------------------------------------------
# TYPEORM_HOST - The endpoint that TypeORM uses to connect with the databsae
# TYPEORM_PORT - The port that TypeORM uses to connect with the database
# TYPEORM_DATABASE - The database name where our data is stored
# TYPEORM_USER - The user TypeORM uses to connect with our database
# TYPEORM_PASSWORD - The password used to connect with our database
# TYPEORM_LOGGING - If set to "true", it logs every query executed by TypeORM

# AUTH0
# --------------------------------------------------------------------------------------------------
# AUTHZ_ISSUER - The host name of the credential issuer of Auth0 in our tenant (it is usually the namespace without the protocol prefix)
# AUTHZ_AUDIENCE - The audience of our Auth0 API in our tenant

# GRAPHQL
# --------------------------------------------------------------------------------------------------
GRAPHQL_SCHEMA_FILE_PATH='./dist/src/interface/graphql/schema.gql'
# GRAPHQL_DEBUG_ENABLED - Enables the debug feature in our GraphQL server
# GRAPHQL_PLAYGROUND_ENABLED - Enables the GraphQL playground
# GRAPHQL_INSTROSPECTION_ENABLED - You need to set this to true if you're trying to enabled the playground while using NODE_ENV=production

# POSTGRES
# --------------------------------------------------------------------------------------------------
# POSTGRES_USER - Used only in development environments, it sets the Postgres user of our database
# POSTGRES_PASSWORD - Used only in development environments, it sets the Postgres password of our database
# POSTGRES_DB - Used only in development environments, it sets the Postgres name of our database
# POSTGRES_DATA - Used only in development environments, it sets the Postgres host volume path of our database that will persist the container data
